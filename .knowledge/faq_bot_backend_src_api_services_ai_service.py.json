{"is_source_file": true, "format": "Python", "description": "This file defines the AIService class, which provides a minimal abstraction for interacting with language models, including capabilities to list available models, get/set the active model, and generate responses based on prompts and context snippets. It is intended as a mock or stub implementation for demonstration purposes.", "external_files": [], "external_methods": [], "published": ["AIService"], "classes": [{"name": "AIService", "description": "A minimal AI service abstraction to simulate GPT-like generation, supporting model selection and text generation based on context."}], "methods": [{"name": "List[Dict[str,str]] get_available_models(self)", "description": "Returns a list of available AI models with their descriptions.", "scope": "AIService", "scopeKind": "class"}, {"name": "str get_active_model(self)", "description": "Returns the name of the currently active AI model.", "scope": "AIService", "scopeKind": "class"}, {"name": "bool set_active_model(self, model_name: str)", "description": "Sets the active model to the specified model name if it exists; returns True if successful.", "scope": "AIService", "scopeKind": "class"}, {"name": "Tuple[str,Dict] generate(self, prompt: str, context_snippets: List[Dict[str, str]])", "description": "Generates a mock answer based on a prompt and context snippets, returning the answer and metadata.", "scope": "AIService", "scopeKind": "class"}], "calls": ["list", "list", "list", "list", "list", "get", "get", "get", "get", "get", "list", "list"], "search-terms": ["AIService", "mock", "generate", "models", "context", "simulation", "GPT-like"], "state": 2, "file_id": 10, "knowledge_revision": 43, "git_revision": "ceca03ced72cff33cf4ac6f913cd3f3e8e5c7556", "revision_history": [{"22": ""}, {"41": ""}, {"42": ""}, {"43": "ceca03ced72cff33cf4ac6f913cd3f3e8e5c7556"}], "ctags": [{"_type": "tag", "name": "AIService", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-search-and-control-panel-29944-29953/faq_bot_backend/src/api/services/ai_service.py", "pattern": "/^class AIService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_active_model", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-search-and-control-panel-29944-29953/faq_bot_backend/src/api/services/ai_service.py", "pattern": "/^    _active_model: str = \"gpt-mini\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "AIService", "scopeKind": "class"}, {"_type": "tag", "name": "_models", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-search-and-control-panel-29944-29953/faq_bot_backend/src/api/services/ai_service.py", "pattern": "/^    _models: List[Dict[str, str]] = [$/", "language": "Python", "typeref": "typename:List[Dict[str, str]]", "kind": "variable", "scope": "AIService", "scopeKind": "class"}, {"_type": "tag", "name": "generate", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-search-and-control-panel-29944-29953/faq_bot_backend/src/api/services/ai_service.py", "pattern": "/^    def generate(self, prompt: str, context_snippets: List[Dict[str, str]]) -> Tuple[str, Dict]:$/", "language": "Python", "typeref": "typename:Tuple[str,Dict]", "kind": "member", "signature": "(self, prompt: str, context_snippets: List[Dict[str, str]])", "scope": "AIService", "scopeKind": "class"}, {"_type": "tag", "name": "get_active_model", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-search-and-control-panel-29944-29953/faq_bot_backend/src/api/services/ai_service.py", "pattern": "/^    def get_active_model(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "AIService", "scopeKind": "class"}, {"_type": "tag", "name": "get_available_models", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-search-and-control-panel-29944-29953/faq_bot_backend/src/api/services/ai_service.py", "pattern": "/^    def get_available_models(self) -> List[Dict[str, str]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,str]]", "kind": "member", "signature": "(self)", "scope": "AIService", "scopeKind": "class"}, {"_type": "tag", "name": "set_active_model", "path": "/home/kavia/workspace/code-generation/ai-faq-assistant-with-search-and-control-panel-29944-29953/faq_bot_backend/src/api/services/ai_service.py", "pattern": "/^    def set_active_model(self, model_name: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, model_name: str)", "scope": "AIService", "scopeKind": "class"}], "hash": "77063099f7215fdc93b307c0d786a5ee", "format-version": 4, "code-base-name": "faq_bot_backend", "filename": "faq_bot_backend/src/api/services/ai_service.py", "fields": [{"name": "str _active_model", "scope": "AIService", "scopeKind": "class", "description": "unavailable"}, {"name": "List[Dict[str, str]] _models", "scope": "AIService", "scopeKind": "class", "description": "unavailable"}]}